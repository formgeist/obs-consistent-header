import { Rotation } from '../../chart_types/xy_chart/utils/specs';
export declare const getChartRotationSelector: import("re-reselect").Selector<import("../chart_state").GlobalChartState, Rotation> & {
    resultFunc: (res: import("../..").SettingsSpec) => Rotation;
    dependencies: [import("re-reselect").Selector<import("../chart_state").GlobalChartState, import("../..").SettingsSpec>];
    recomputations: () => number;
    resetRecomputations: () => number;
} & {
    getMatchingSelector: (state: import("../chart_state").GlobalChartState, ...args: any[]) => import("re-reselect").OutputSelector<import("../chart_state").GlobalChartState, Rotation, (res: import("../..").SettingsSpec) => Rotation, [import("re-reselect").Selector<import("../chart_state").GlobalChartState, import("../..").SettingsSpec>]>;
    removeMatchingSelector: (state: import("../chart_state").GlobalChartState, ...args: any[]) => void;
    clearCache: () => void;
    cache: import("re-reselect").ICacheObject;
    keySelector: import("re-reselect").KeySelector<import("../chart_state").GlobalChartState>;
};
