import { ScaleQuantize } from 'd3-scale';
import { ScaleType, Scale } from './scales';
export declare class ScaleBand implements Scale {
    readonly bandwidth: number;
    readonly bandwidthPadding: number;
    readonly step: number;
    readonly type: ScaleType;
    readonly domain: any[];
    readonly range: number[];
    readonly isInverted: boolean;
    readonly invertedScale: ScaleQuantize<number>;
    readonly minInterval: number;
    readonly barsPadding: number;
    private readonly d3Scale;
    constructor(domain: any[], range: [number, number], overrideBandwidth?: number, 
    /**
     * The proportion of the range that is reserved for blank space between bands
     * A number between 0 and 1.
     * @default 0
     */
    barsPadding?: number);
    scale(value: any): any;
    pureScale(value: any): any;
    ticks(): any[];
    invert(value: any): number;
    invertWithStep(value: any): {
        value: number;
        withinBandwidth: boolean;
    };
    isSingleValue(): boolean;
    isValueInDomain(value: any): boolean;
}
