import { DataSeries, DataSeriesDatum, RawDataSeries, RawDataSeriesDatum } from '../../chart_types/xy_chart/utils/series';
import { FullDataSeriesDatum, WithIndex } from '../../chart_types/xy_chart/utils/fit_function';
export declare class MockDataSeries {
    private static readonly base;
    static default(partial?: Partial<DataSeries>): DataSeries;
    static fitFunction(options?: {
        shuffle?: boolean;
        ordinal?: boolean;
    }): DataSeries;
    static withData(data: DataSeries['data']): DataSeries;
}
export declare class MockRawDataSeries {
    private static readonly base;
    static default(partial?: Partial<RawDataSeries>): RawDataSeries;
    static fitFunction(options?: {
        shuffle?: boolean;
        ordinal?: boolean;
    }): RawDataSeries;
    static withData(data: RawDataSeries['data']): RawDataSeries;
}
export declare class MockDataSeriesDatum {
    private static readonly base;
    static default(partial?: Partial<DataSeriesDatum>): DataSeriesDatum;
    /**
     * Fill datum with minimal values, default missing required values to `null`
     */
    static simple({ x, y1, y0, filled, }: Partial<DataSeriesDatum> & Pick<DataSeriesDatum, 'x'>): DataSeriesDatum;
    /**
     * returns "full" datum with minimal values, default missing required values to `null`
     *
     * "full" - means x and y1 values are `non-nullable`
     */
    static full({ fittingIndex, ...datum }: Partial<WithIndex<FullDataSeriesDatum>> & Pick<WithIndex<FullDataSeriesDatum>, 'x' | 'y1'>): WithIndex<FullDataSeriesDatum>;
    static ordinal(partial?: Partial<DataSeriesDatum>): DataSeriesDatum;
}
export declare class MockRawDataSeriesDatum {
    private static readonly base;
    static default(partial?: Partial<RawDataSeriesDatum>): RawDataSeriesDatum;
    /**
     * Fill raw datum with minimal values, default missing required values to `null`
     */
    static simple({ x, y1, y0, }: Partial<RawDataSeriesDatum> & Pick<RawDataSeriesDatum, 'x'>): RawDataSeriesDatum;
    static ordinal(partial?: Partial<RawDataSeriesDatum>): RawDataSeriesDatum;
}
