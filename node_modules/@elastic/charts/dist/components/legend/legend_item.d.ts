import React from 'react';
import { LegendItemListener, BasicListener } from '../../specs/settings';
import { LegendItem } from '../../chart_types/xy_chart/legend/legend';
import { onLegendItemOutAction, onLegendItemOverAction } from '../../state/actions/legend';
import { Position } from '../../chart_types/xy_chart/utils/specs';
import { SeriesIdentifier } from '../../chart_types/xy_chart/utils/series';
interface LegendItemProps {
    selectedLegendItem?: LegendItem | null;
    legendItem: LegendItem;
    displayValue: string;
    label?: string;
    legendPosition: Position;
    showLegendDisplayValue: boolean;
    onLegendItemClickListener?: LegendItemListener;
    onLegendItemOutListener?: BasicListener;
    onLegendItemOverListener?: LegendItemListener;
    legendItemOutAction: typeof onLegendItemOutAction;
    legendItemOverAction: typeof onLegendItemOverAction;
    toggleDeselectSeriesAction: (legendItemId: SeriesIdentifier) => void;
}
export declare class LegendListItem extends React.Component<LegendItemProps> {
    static displayName: string;
    shouldComponentUpdate(nextProps: LegendItemProps): boolean;
    render(): JSX.Element;
    onLegendItemMouseOver: () => void;
    onLegendItemMouseOut: () => void;
    onVisibilityClick: (legendItemId: SeriesIdentifier) => () => void;
}
export {};
