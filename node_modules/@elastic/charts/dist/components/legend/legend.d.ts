import React from 'react';
import { Position } from '../../chart_types/xy_chart/utils/specs';
import { onToggleLegend } from '../../state/actions/legend';
import { Theme } from '../../utils/themes/theme';
import { TooltipLegendValue } from '../../chart_types/xy_chart/tooltip/tooltip';
import { LegendItem } from '../../chart_types/xy_chart/legend/legend';
import { BBox } from '../../utils/bbox/bbox_calculator';
import { onToggleDeselectSeriesAction, onLegendItemOutAction, onLegendItemOverAction } from '../../state/actions/legend';
import { SettingsSpec } from '../../specs';
interface LegendStateProps {
    legendItems: Map<string, LegendItem>;
    legendPosition: Position;
    legendItemTooltipValues: Map<string, TooltipLegendValue>;
    showLegend: boolean;
    legendCollapsed: boolean;
    debug: boolean;
    chartTheme: Theme;
    legendSize: BBox;
    settings?: SettingsSpec;
}
interface LegendDispatchProps {
    onToggleLegend: typeof onToggleLegend;
    onLegendItemOutAction: typeof onLegendItemOutAction;
    onLegendItemOverAction: typeof onLegendItemOverAction;
    onToggleDeselectSeriesAction: typeof onToggleDeselectSeriesAction;
}
declare type LegendProps = LegendStateProps & LegendDispatchProps;
interface LegendStyle {
    maxHeight?: string;
    maxWidth?: string;
    width?: string;
    height?: string;
}
interface LegendListStyle {
    paddingTop?: number | string;
    paddingBottom?: number | string;
    paddingLeft?: number | string;
    paddingRight?: number | string;
    gridTemplateColumns?: string;
}
declare class LegendComponent extends React.Component<LegendProps> {
    static displayName: string;
    legendItemCount: number;
    private echLegend;
    render(): JSX.Element | null;
    getLegendListStyle: (position: "top" | "bottom" | "left" | "right", { chartMargins, legend }: Theme) => LegendListStyle;
    getLegendStyle: (position: "top" | "bottom" | "left" | "right", size: BBox) => LegendStyle;
    private getLegendValues;
    private renderLegendElement;
}
export declare const Legend: import("react-redux").ConnectedComponent<typeof LegendComponent, Pick<LegendProps, never>>;
export {};
