import { Coordinate, Distance, Pixels, Radian, Radius, RingSector } from '../types/geometry_types';
import { Config } from '../types/config_types';
import { QuadViewModel, RawTextGetter, RowSet, RowSpace, ShapeTreeNode } from '../types/viewmodel_types';
import { TextMeasure } from '../types/types';
import { Layer } from '../../specs/index';
export declare function nodeId(node: ShapeTreeNode): string;
export declare function rectangleConstruction(node: ShapeTreeNode): {
    x0: number;
    y0: number;
    x1: number;
    y1: number;
};
export declare function ringSectorConstruction(config: Config, innerRadius: Radius, ringThickness: Distance): (ringSector: ShapeTreeNode) => import("../types/geometry_types").CirclinePredicate[];
export declare function getSectorRowGeometry(ringSector: RingSector, cx: Coordinate, cy: Coordinate, totalRowCount: number, linePitch: Pixels, rowIndex: number, fontSize: Pixels, rotation: Radian): RowSpace;
export declare function getRectangleRowGeometry(container: any, cx: number, cy: number, totalRowCount: number, linePitch: Pixels, rowIndex: number, fontSize: Pixels): RowSpace;
export declare function inSectorRotation(horizontalTextEnforcer: number, horizontalTextAngleThreshold: number): (node: ShapeTreeNode) => number;
export declare function fillTextLayout(measure: TextMeasure, rawTextGetter: RawTextGetter, valueFormatter: (value: number) => string, childNodes: QuadViewModel[], config: Config, layers: Layer[], textFillOrigins: [number, number][], shapeConstructor: (n: ShapeTreeNode) => any, getShapeRowGeometry: (...args: any[]) => RowSpace, getRotation: Function): RowSet[];
