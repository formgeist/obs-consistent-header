import { Rotation } from '../utils/specs';
import { Dimensions } from '../../../utils/dimensions';
import { Scale } from '../../../utils/scales/scales';
import { Point } from '../../../utils/point';
export interface SnappedPosition {
    position: number;
    band: number;
}
export interface TooltipPosition {
    /** true if the x axis is horizontal */
    isRotatedHorizontal: boolean;
    vPosition: {
        /** the top position of the tooltip relative to the parent */
        bandTop: number;
        /** the height of the crosshair band if any */
        bandHeight: number;
    };
    hPosition: {
        /** the left position of the tooltip relative to the parent */
        bandLeft: number;
        /** the width of the crosshair band if any */
        bandWidth: number;
    };
}
export declare const DEFAULT_SNAP_POSITION_BAND = 1;
export declare function getSnapPosition(value: string | number, scale: Scale, totalBarsInCluster?: number): {
    band: number;
    position: number;
} | undefined;
export declare function getCursorLinePosition(chartRotation: Rotation, chartDimensions: Dimensions, projectedPointerPosition: {
    x: number;
    y: number;
}): Dimensions | undefined;
export declare function getCursorBandPosition(chartRotation: Rotation, chartDimensions: Dimensions, cursorPosition: Point, invertedValue: {
    value: any;
    withinBandwidth: boolean;
}, snapEnabled: boolean, xScale: Scale, totalBarsInCluster?: number): Dimensions & {
    visible: boolean;
};
export declare function getTooltipPosition(chartDimensions: Dimensions, chartRotation: Rotation, cursorBandPosition: Dimensions, cursorPosition: {
    x: number;
    y: number;
}, isSingleValueXScale: boolean): TooltipPosition;
export declare function getFinalTooltipPosition(
/** the dimensions of the chart parent container */
container: Dimensions, 
/** the dimensions of the tooltip container */
tooltip: Dimensions, 
/** the tooltip computed position not adjusted within chart bounds */
tooltipPosition: TooltipPosition, 
/** the padding to add between the tooltip position and the final position */
padding?: number): {
    left: string | null;
    top: string | null;
};
