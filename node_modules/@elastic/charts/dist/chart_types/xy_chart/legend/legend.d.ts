import { LastValues } from '../state/utils';
import { SeriesCollectionValue, SeriesIdentifier } from '../utils/series';
import { AxisSpec, BasicSeriesSpec, Postfixes } from '../utils/specs';
import { BandedAccessorType } from '../../../utils/geometry';
interface FormattedLastValues {
    y0: number | string | null;
    y1: number | string | null;
}
export declare type LegendItem = Postfixes & {
    key: string;
    color: string;
    label: string;
    seriesIdentifier: SeriesIdentifier;
    isSeriesVisible?: boolean;
    banded?: boolean;
    isLegendItemVisible?: boolean;
    displayValue: {
        raw: LastValues;
        formatted: FormattedLastValues;
    };
};
export declare function getItemLabel({ banded, label, y1AccessorFormat, y0AccessorFormat }: LegendItem, yAccessor: BandedAccessorType): string;
export declare function computeLegend(seriesCollection: Map<string, SeriesCollectionValue>, seriesColors: Map<string, string>, specs: BasicSeriesSpec[], defaultColor: string, axesSpecs: AxisSpec[], deselectedDataSeries?: SeriesIdentifier[]): Map<string, LegendItem>;
export {};
