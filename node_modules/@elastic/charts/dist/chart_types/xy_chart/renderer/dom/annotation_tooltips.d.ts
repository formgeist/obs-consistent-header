import React from 'react';
import { AnnotationSpec } from '../../utils/specs';
import { AnnotationId } from '../../../../utils/ids';
import { AnnotationDimensions, AnnotationTooltipState } from '../../annotations/annotation_utils';
import { Dimensions } from '../../../../utils/dimensions';
import { BackwardRef } from '../../../../state/chart_state';
import { AnnotationLineProps } from '../../annotations/line_annotation_tooltip';
interface AnnotationTooltipStateProps {
    isChartEmpty: boolean;
    tooltipState: AnnotationTooltipState | null;
    chartDimensions: Dimensions;
    annotationDimensions: Map<AnnotationId, AnnotationDimensions>;
    annotationSpecs: AnnotationSpec[];
}
interface AnnotationTooltipOwnProps {
    getChartContainerRef: BackwardRef;
}
declare type AnnotationTooltipProps = AnnotationTooltipStateProps & AnnotationTooltipOwnProps;
declare class AnnotationTooltipComponent extends React.Component<AnnotationTooltipProps> {
    static displayName: string;
    portalNode: HTMLDivElement | null;
    tooltipRef: React.RefObject<HTMLDivElement>;
    constructor(props: AnnotationTooltipProps);
    createPortalNode(): void;
    componentDidMount(): void;
    componentDidUpdate(): null | undefined;
    componentWillUnmount(): void;
    renderTooltip: () => JSX.Element | null;
    renderAnnotationLineMarkers(annotationLines: AnnotationLineProps[], id: AnnotationId): JSX.Element[];
    renderAnnotationMarkers(): JSX.Element[];
    render(): JSX.Element | null;
}
export declare const AnnotationTooltip: import("react-redux").ConnectedComponent<typeof AnnotationTooltipComponent, Pick<AnnotationTooltipProps, "getChartContainerRef">>;
export {};
