import React from 'react';
import { AxisTick, AxisTicksDimensions } from '../../utils/axis_utils';
import { AxisSpec } from '../../utils/specs';
import { Theme } from '../../../../utils/themes/theme';
import { Dimensions } from '../../../../utils/dimensions';
import { AxisId } from '../../../../utils/ids';
interface AxisProps {
    theme: Theme;
    axisSpec: AxisSpec;
    axisTicksDimensions: AxisTicksDimensions;
    axisPosition: Dimensions;
    ticks: AxisTick[];
    debug: boolean;
    chartDimensions: Dimensions;
}
export declare class Axis extends React.Component<AxisProps> {
    shouldComponentUpdate(nextProps: AxisProps): boolean;
    private renderTickLabel;
    private renderTickLine;
    private renderAxisLine;
    private renderAxisTitle;
    private renderVerticalAxisTitle;
    private renderHorizontalAxisTitle;
    render(): JSX.Element;
}
interface AxesProps {
    axesVisibleTicks: Map<AxisId, AxisTick[]>;
    axesSpecs: AxisSpec[];
    axesTicksDimensions: Map<AxisId, AxisTicksDimensions>;
    axesPositions: Map<string, Dimensions>;
    theme: Theme;
    debug: boolean;
    chartDimensions: Dimensions;
}
declare class AxesComponent extends React.Component<AxesProps> {
    shouldComponentUpdate(nextProps: AxesProps): boolean;
    render(): JSX.Element[];
}
export declare const Axes: import("react-redux").ConnectedComponent<typeof AxesComponent, Pick<AxesProps, never>>;
export {};
