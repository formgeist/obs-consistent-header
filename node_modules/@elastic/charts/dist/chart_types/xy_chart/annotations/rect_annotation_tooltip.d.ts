import { RectAnnotationSpec, Rotation } from '../utils/specs';
import { Dimensions } from '../../../utils/dimensions';
import { GroupId } from '../../../utils/ids';
import { Scale } from '../../../utils/scales/scales';
import { Point } from '../../../utils/point';
import { AnnotationTooltipFormatter, AnnotationTooltipState, Bounds } from './annotation_utils';
export interface AnnotationRectProps {
    rect: {
        x: number;
        y: number;
        width: number;
        height: number;
    };
    details?: string;
}
export declare function computeRectAnnotationTooltipState(
/** the cursor position relative to the projection area */
cursorPosition: Point, annotationRects: AnnotationRectProps[], chartRotation: Rotation, chartDimensions: Dimensions, renderTooltip?: AnnotationTooltipFormatter): AnnotationTooltipState;
export declare function isWithinRectBounds({ x, y }: Point, { startX, endX, startY, endY }: Bounds): boolean;
export declare function computeRectAnnotationDimensions(annotationSpec: RectAnnotationSpec, yScales: Map<GroupId, Scale>, xScale: Scale, enableHistogramMode: boolean, barsPadding: number): AnnotationRectProps[] | null;
